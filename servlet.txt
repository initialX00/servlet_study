수업순서
1. java 기초
2. HTML, CSS, JS
3. Servlet, JSP
4. MySQL(Database) - AWS RDS
5. Java JDBC(JACA Database Connector)
6. React(JS기반) - 배포 AWS S3 -> https
7. ServerStateManagement(React Query)
8. ClientStateManagement(Recoil)
9. SpringBoot - AOP, Validation, SpringBoot Security JWT, Swagger, EMail, payment(portOne)
10. MybatisFramework(JDBC 라이브러리), JPA
11. 배포 - ec2(우분투) + Docker + nginx + github Actions + https



=============
오류해결방법

ㅇservlet뭔가 안 될때 (서버오류)
1. 서버를 끈다
2. File -> Close Project
3. project 폴더로 이동해서 잘 못된 위치의 .idea폴더있으면 삭제
4. serblet 폴더의 .idea폴더와 target폴더 삭제 (두 폴더는 자동생성되기에 삭제하여 초기화)
5. project 열기
6. maven 탭 열고 clean 실행, 완료 후 install 실행
7. tomcat 재설정 (edit configuration) - tomcat local 선택
8. deployment - artifact 선택
9. server - VMoption => -Dfile.encoding=UTF-8 입력
10. 저장 및 재실행

ㅇ코드오류 시
예외문구 첫줄의 끝부분부터 봐라.
or 주요부분들 값 출력해보기
or 디버그


======================


확장자xml은 세팅
확장자jsp는 자바에 html을 적용한것

wepapp쪽에서 html관련이 생성하고
java쪽에서 java관련을 생성하자.

http://localhost:8080/servlet_study_war/index.jsp
기본적으로 index.jsp은 생략된다.
주소에서 lacalhost는 this와 같은 의미를 지닌다. 로컬이 아닌경우 정상적인 ip가 뜬다.
각 프로그램별로 8080등의 서버주소가 있다.
폴더경로처럼 /를 통해 들어갈 수가 있다.


java -> tomcat서버 -> servlet로 정보전달이 이루어진다

servlet은 요청과 응답을 담당하는 클래스 객체이다.

수가지의 요청 중에
GET POST PUT DLELETE 4가지를 주로 쓴다. (CRUD)


get 불러오기, req 요청, resp 응답

예전에는 응답은 html코드를 했지만,
JSP로 편의성이 증대하여 이제는 모든 응답은 JSON으로 한다.




html 주소에서 ? key=value를 입력할 수 있다. &를 입력해 여러개 입력가능

f12로 html 소스에서 jsp파일 다운이 가능하여 보안에 취약하다
외부에서 접근이 불가한 WEB-INF를 활용하여 접근한다.
doGet의 호출하고
req.getRequestDispatcher("/WEB-INF/product_register.jsp").forward(req,resp);로 파일에 접근한다.

<% %>  스크립틀릿 : html에 자바코드를 적어 넣을 수 있는 태그
<%=name %>  스크립트릿에 =를 통해 변수를 불러올 수 있다



[EL 표현식]
el 표현식은 라이브러리 필요,  getter랑 setter 필요
표현방식: ${}
EL 표현식을 사용할 수 있는 경우
1. Attribute에 포함되어 있는 값을 불러올 때(Application, Session, Request)
2. JSP의 기본 설정값을 불러올 때

Application - 서버실행 시 생성되는 저장객체, 전역(공용)
Session - 브라우저에서 서버로 최초요청이 들어올때 생성, 전역(개인 저장소), 인증 등에 사용
Request - 매번 요청 시 생성, 지역

setAttribute("키",값(object))

요청 : 홈페이지 -> 톰캣 req,resp -> doGet(req,resp) ->
응답 : req.setAttribute("키",밸류) -> 톰캣 req,resp -> 홈페이지


http 프로토콜
http 상태코드





